name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download and setup Ngrok
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          # Ngrok'u indir ve çıkar
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
          # Ngrok auth token'ını ayarla
          .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN

      - name: Enable RDP and Set User Password
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
          
      - name: Start Ngrok Tunnel and Print URL
        shell: pwsh
        run: |
          # Ngrok'u arka planda bir "job" olarak başlat, böylece bu adım takılı kalmaz.
          Start-Job -FilePath ".\ngrok.exe" -ArgumentList "tcp", "3389", "--log", "stdout"
          
          # Ngrok API'sinin hazır olmasını beklemek için bir yeniden deneme döngüsü
          Write-Host "Waiting for Ngrok API to be ready..."
          $tunnel_url = $null
          foreach ($i in 1..10) {
            try {
              Start-Sleep -Seconds 2
              $tunnels = Invoke-RestMethod -Uri "http://127.0.0.1:4040/api/tunnels"
              $tunnel_url = ($tunnels.tunnels | Where-Object { $_.proto -eq "tcp" }).public_url
              if ($tunnel_url) { break }
            } catch { 
              Write-Host "API not ready yet, retrying... ($i/10)"
            }
          }

          # Python betiğinin bulabilmesi için URL'yi loglara yazdır
          if ($tunnel_url) {
            Write-Host "=========================================="
            # Bu satır Python betiği tarafından aranacak olan anahtar satırdır.
            Write-Host "Ngrok RDP address is: $tunnel_url"
            Write-Host "=========================================="
          } else {
            Write-Host "Error: Could not retrieve Ngrok tunnel URL."
            exit 1
          }

      - name: Keep Workflow Alive
        run: |
          echo "RDP tüneli aktif. Kapatmak için GitHub Actions'tan workflow'u iptal edin."
          # Workflow'un kapanmaması için uzun bir süre bekle (yaklaşık 6 saat)
          Start-Sleep -s 21000
